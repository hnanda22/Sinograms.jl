var documenterSearchIndex = {"docs":
[{"location":"methods/#Methods-list","page":"Methods","title":"Methods list","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"","category":"page"},{"location":"methods/#Methods-usage","page":"Methods","title":"Methods usage","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"Modules = [Sinograms]","category":"page"},{"location":"methods/#Sinograms.Sinograms","page":"Methods","title":"Sinograms.Sinograms","text":"Sinograms module\n\n\n\n\n\n","category":"module"},{"location":"methods/#Sinograms.fbp!-Tuple{AbstractMatrix{<:Number}, AbstractMatrix{<:Number}}","page":"Methods","title":"Sinograms.fbp!","text":"fbp!(image, sino ; orbit::Real = 180, kwargs...)\n\nFBP reconstruction from a parallel-beam sinogram of size [nr × nϕ]. Writes result into image matrix.\n\nInput\n\nsino::AbstractMatrix\n\nOptions for sino_geom\n\ndr : sinogram radial spacing; default 1\norbit : angular range in degrees; default 180\norbit_start : angular range in degrees; default 180\n\nOptions for image_geom\n\ndx, dy, offset_x, offset_y\n\nOptions\n\nkwargs : passed to fbp2\n\nOutput\n\nimage::AbstractMatrix is mutated\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp-Union{Tuple{AbstractMatrix{T}}, Tuple{T}} where T<:Number","page":"Methods","title":"Sinograms.fbp","text":"fbp(sino::AbstractMatrix ; kwargs...)\n\nFBP reconstruction from a parallel-beam sinogram of size [nr × nϕ]. Returns an image of size [nx × ny].\n\nOptions\n\nnx : default nr\nny : default nx\nkwargs : passed to fbp2\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp2-Tuple{MIRT.SinoGeom, MIRT.ImageGeom}","page":"Methods","title":"Sinograms.fbp2","text":"plan = fbp2(sg, ig; how=:normal, window=:none)\n\nFBP 2D tomographic image reconstruction for parallel-beam or fan-beam cases, with either flat or arc detector for fan-beam case.\n\nTo use this, you first call it with the sinogram and image geometry. The routine returns the initialized \"plan\". Thereafter, to to perform FBP reconstruction, you call this routine with the plan (perhaps numerous times for the same geometry).\n\nin\n\nsg::SinoGeom\nig::ImageGeom\n\noptions\n\nhow::Symbol             how to reconstruct\n:normal             default\n:mojette            use mojette rebinning and Gtomo2_table\nwindow::Symbol          e.g. :hann (default: :none)\n\n-T::DataType              type of sino elements (default: Float32)\n\nout\n\nplan::FBPplan            initialized plan\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp2-Tuple{Sinograms.NormalPlan, AbstractMatrix{<:Number}}","page":"Methods","title":"Sinograms.fbp2","text":"image, sino_filt = fbp2(plan, sino)\n\nFiltered back-projection (FBP) reconstruction, returning image and filtered sinogram\n\nin\n\nplan::FBPplan\nsino::AbstractMatrix{<:Number}\n\nout\n\nimage::AbstractMatrix{<:Number}       reconstructed image(s)\nsino_filt::AbstractMatrix{<:Number}   filtered sinogram(s)\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp2_back-Tuple{MIRT.SinoPar, MIRT.ImageGeom, AbstractMatrix{<:Number}}","page":"Methods","title":"Sinograms.fbp2_back","text":"img = fbp2_back(sg, ig, sino; ia_skip)\n\n2D backprojection for FBP.\n\nin\n\nsg::SinoGeom\nig::ImageGeom\nsino::AbstractArray{<:Number}      sinogram(s) (line integrals), usually ramp filtered\n\noptions\n\nia_skip::Int                        downsample in angle to save time for quick tests (default: 1)\n\nout\n\nimg::AbstractArray{<:Number}       reconstructed image(s)\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp2_back_fan-Tuple{MIRT.SinoGeom, MIRT.ImageGeom, AbstractMatrix{<:Number}}","page":"Methods","title":"Sinograms.fbp2_back_fan","text":"img = fbp2_back_fan(sg, ig, sino; ia_skip)\n\n2D backprojection for fan-beam FBP.\n\nin\n\nsg::SinoGeom\nig::ImageGeom\nsino::AbstractArray{<:Number}      sinogram(s) (line integrals)\n\noptions\n\nia_skip::Int                        downsample in angle to save time for quick tests (default: 1)\n\nout\n\nimg::AbstractArray{<:Number}       reconstructed image(s)\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp2_sino_filter-Tuple{MIRT.SinoGeom, AbstractMatrix{<:Number}}","page":"Methods","title":"Sinograms.fbp2_sino_filter","text":"sino, Hk, hh, nn = fbp2_sino_filter(how, sino;\nds=1, dsd=0, extra=0, npad=0, decon1=1, window=:none)\n\nApply ramp-like filters to sinogram(s) for 2D FBP image reconstruction. Both parallel-beam and fan-beam tomographic geometries are supported. This approach of sampling the band-limited ramp avoids the aliasing that would be caused by sampling the ramp directly in the frequency domain.\n\nin\n\nhow::Symbol :arc (3rd generation CT) or :flat (for parallel too)\nsino::AbstractArray{<:Number} : [nb (L)] sinograms\n\noptions\n\nds::RealU : sample spacing (in distance units, e.g., cm) (default: 1)\ndsd::RealU : source-to-detector distance, for :arc case only. (default: Inf)\nextra::Int : # of extra sinogram radial samples to keep (default: 0)\nnpad::Int : # of padded samples. (default: 0, means next power of 2)\ndecon1::Int : deconvolve effect of linear interpolator? (default: 1)\nwindow::Symbol : default: :none\n\nout\n\nsino::AbstractArray{<:Number}       filtered sinogram rows\nHk::AbstractVector{<:Number}        apodized ramp filter frequency response\nhn::AbstractVector{<:Number}        samples of band-limited ramp filter\nnn::AbstractVector{<:Number}        [-np/2,...,np/2-1] vector for convenience\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp2_sino_weight-Tuple{MIRT.SinoFanArc, AbstractMatrix{<:Number}}","page":"Methods","title":"Sinograms.fbp2_sino_weight","text":"sino = fbp2_sino_weight(sg, ig, sino)\n\nApply sinogram weighting for first step of 2D fan-beam FBP.\n\nin\n\nsg::SinoGeom\nsino::AbstractMatrix{<:Number}\n\nout\n\nsino::AbstractMatrix{<:Number}\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp2_window-Tuple{Int64, Symbol}","page":"Methods","title":"Sinograms.fbp2_window","text":"window = fbp2_window(n, window)\n\nCreate an apodizing window of length n and fftshift it\n\n\n\n\n\n","category":"method"},{"location":"methods/#Sinograms.fbp_ramp-Tuple{MIRT.SinoPar, Int64, Number, Number}","page":"Methods","title":"Sinograms.fbp_ramp","text":"h, nn = fbp_ramp(how, n, ds, dsd)\n\n'ramp-like' filters for parallel-beam and fan-beam FBP reconstruction. This sampled band-limited approach avoids the aliasing that would be caused by sampling the ramp directly in the frequency domain.\n\nin\n\nhow::Symbol :arc (3rd generation CT) or :flat (for parallel too)\nn::Int : # of samples (must be even)\nds::RealU : sample spacing (in distance units, e.g., cm)\ndsd::RealU : source-to-detector distance, for :arc case\n\nout\n\nh::AbstractMatrix{<:Number} : samples of band-limited ramp filter\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = Sinograms","category":"page"},{"location":"#Sinograms.jl-Documentation","page":"Home","title":"Sinograms.jl Documentation","text":"","category":"section"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Sinograms.jl. is a Julia language package with tools for tomographic image reconstruction, including","category":"page"},{"location":"","page":"Home","title":"Home","text":"describing ray geometries (parallel beam, fan beam, etc.)\nperforming filtered back-projection (FBP) image reconstruction\nsystem models for iterative reconstruction","category":"page"},{"location":"","page":"Home","title":"Home","text":"It is all a WIP. See the examples","category":"page"},{"location":"","page":"Home","title":"Home","text":"See also:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Michigan Image Reconstruction Toolbox (MIRT)\nJuliaImageRecon","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"EditURL = \"https://github.com/JeffFessler/Sinograms.jl/blob/main/docs/lit/examples/docs/lit/examples/01-tomography.jl\"","category":"page"},{"location":"generated/examples/01-tomography/#tomography","page":"Tomography","title":"Tomography","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"This page gives an overview of the Julia package Sinograms.jl.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"This page was generated from a single Julia file: 01-tomography.jl.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"In any such Julia documentation, you can access the source code using the \"Edit on GitHub\" link in the top right.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The corresponding notebook can be viewed in nbviewer here: 01-tomography.ipynb, and opened in binder here: 01-tomography.ipynb.","category":"page"},{"location":"generated/examples/01-tomography/#Setup","page":"Tomography","title":"Setup","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Packages needed here.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"using Sinograms: fbp\nusing MIRTjim: jim, prompt\nusing InteractiveUtils: versioninfo","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The following line is helpful when running this example.jl file as a script; this way it will prompt user to hit a key after each figure is displayed.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"isinteractive() ? jim(:prompt, true) : prompt(:draw);\nnothing #hide","category":"page"},{"location":"generated/examples/01-tomography/#Tomography","page":"Tomography","title":"Tomography","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Tomography is the process of imaging cross sections of an object without actually slicing the object. There are many forms of tomography; the description here focuses on X-ray computed tomography (CT scans). (See SPECTrecon.jl for a Julia package related to SPECT imaging.)","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"In an X-ray CT imaging system, X-rays emitted from an X-ray source are transmitted through an object (e.g., a patient in medical CT) towards a detector array. The source and detector rotate rapidly around the object. The signal intensities recorded by the detector are related to the sizes and densities of the object materials between the source and each detector element.","category":"page"},{"location":"generated/examples/01-tomography/#Radon-transform","page":"Tomography","title":"Radon transform","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The mathematical foundation for 2D X-ray CT imaging is the Radon transform, an integral transform that maps a 2D function f(xy) into the collection of line integrals through that function. Here we describe each line by its angle phi measured counter-clockwise from the y axis, and by the radial distance r of the line from the origin. The collection of integrals is called a sinogram.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Mathematically, the Radon transform p(rphi) of f(xy) is defined by","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"p(rphi) = int_-infty^infty\nf(r cos phi - l sin phi\nr sin phi + l cos phi)  mathrmd l","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The Radon transform of the object that is 1 inside the unit disk and 0 elsewhere is given by","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"p_1(rphi) = 2 sqrt1 - r^2  mathrm for   r  1","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"By the Radon transform's translation and scaling properties, the Radon transform of a disk of radius r_0 centered at (x_0y_0) is given by","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"p(rphi) = r_0  p_1\nleft( fracr - (x_0 cos phi + y_0 sin phi)r_0 ϕ right)","category":"page"},{"location":"generated/examples/01-tomography/#Sinogram-example","page":"Tomography","title":"Sinogram example","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Here is a display of that Radon transform for a disk of radius 3 centered at coordinate (51). Note that maximum value is approximately 6, the length of the longest chord through a disk of radius 3.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"nr = 128\ndr = 20 / nr\nr = ((-(nr-1)/2):((nr-1)/2)) * dr # radial sample locations\nna = 130\nϕ = (0:(na-1))/na * π # angular samples\nproj1 = r -> abs(r) < 1 ? 2 * sqrt(1 - r^2) : 0.\nproj2 = (r, ϕ, x, y, r0) -> r0 * proj1(r/r0 - (x * cos(ϕ) + y * sin(ϕ))/r0)\nsino = proj2.(r, ϕ', 5, 1, 3)\njimsino = (sino, title) -> jim(\n    r, ϕ, sino; title, aspect_ratio=:none,\n    xlabel = \"r\", ylabel = \"ϕ\", ylims=(0,π), yticks=([0, π], [\"0\", \"π\"]),\n\tyflip=false, xticks = [-10, 0, 2, 5, 8, 10],\n\tclim = (0, 6),\n)\njimsino(sino, \"Sinogram for one disk\")","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"As this figure illustrates, the Radon transform of a unit disk has a somewhat sinusoidal shape. Indeed every point in the (xy) plane traces out a distinct sinusoid in the sinogram.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The mapping from the object f(xy) to data like the sinogram p(rphi) is called the \"forward problem.\"","category":"page"},{"location":"generated/examples/01-tomography/#Image-reconstruction","page":"Tomography","title":"Image reconstruction","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Image reconstruction is the process of solving the inverse problem of recovering an estimate hatf(xy) of the object f(xy) from a measured sinogram, i.e., from (usually noisy) samples of p(rphi).","category":"page"},{"location":"generated/examples/01-tomography/#FBP","page":"Tomography","title":"FBP","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"A simple image reconstruction method is called the \"filtered back-projection\" (FBP) approach. It works by filtering each row of the sinogram with a filter, called the ramp filter, whose frequency response is roughly nu, where nu is the spatial frequency variable (units cycles / m), followed by a back-projection step that is the adjoint of the Radon transform.","category":"page"},{"location":"generated/examples/01-tomography/#FBP-example","page":"Tomography","title":"FBP example","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Here is an illustration of using the fbp method in this package to perform image reconstruction from the preceding sinogram.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"image = fbp(sino; dr)\n(nx,ny) = size(image)\ndx = dr # default\nx = ((-(nx-1)/2):((nx-1)/2)) * dr\ny = x\njim(x, y, image, \"FBP image\",\n    xtick=[-10, 0, 2, 5, 8, 10],\n    ytick=[-10, 0, -2, 1, 4, 10],\n)","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The FBP reconstructed image looks pretty similar to a disk of radius 3 centered at (51) as expected. However, there are quite a few ripples; these are aliasing artifacts due to the finite sampling in r and phi.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"This is example is what is called 2D parallel-beam tomography, because for the angles phi are equally spaced and for each angle the radial samples r are also equally spaced. This package includes FBP reconstruction methods for several other sinogram geometries, including the well-known fan beam geometries and the specialized Mojette geometry.","category":"page"},{"location":"generated/examples/01-tomography/#Noise-effects-on-FBP","page":"Tomography","title":"Noise effects on FBP","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Simulating the effects of measurement noise in sinogram leads to even worse FBP results.","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"First note that a practical imaging system has a finite field of view (FOV):","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"rmax = maximum(r)\nfovmask = @. sqrt(abs2(x) + abs2(y)') ≤ rmax\njim(x, y, fovmask, \"FOV mask\")","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Add noise to the original sinogram:","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"noisy_sinogram = sino + 0.1 * randn(size(sino))\njimsino(noisy_sinogram, \"Noisy sinogram\")","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"Apply FBP to the noisy sinogram:","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"noisy_fbp_image = fbp(noisy_sinogram; dr)\nnoisy_fbp_image .*= fovmask # apply FOV mask\njim(x, y, noisy_fbp_image, \"Noisy FBP image\"; clim=(0,1))","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"The methods in this package (WIP) and related methods in the JuliaImageRecon suite are designed to provide better reconstructions than the simple FBP method. In particular, model-based image reconstruction (MBIR) methods and methods that use suitable machine-learning approaches can improve image quality significantly. See this 2020 survey paper.","category":"page"},{"location":"generated/examples/01-tomography/#Reproducibility","page":"Tomography","title":"Reproducibility","text":"","category":"section"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"This page was generated with the following version of Julia:","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"io = IOBuffer()\nversioninfo(io)\nsplit(String(take!(io)), '\\n')","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"And with the following package versions","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"import Pkg; Pkg.status()","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"","category":"page"},{"location":"generated/examples/01-tomography/","page":"Tomography","title":"Tomography","text":"This page was generated using Literate.jl.","category":"page"}]
}
